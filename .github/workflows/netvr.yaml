name: netvr client build
on: [push]
jobs:
    build_dll:
        runs-on: windows-2019
        steps:
            - uses: actions/checkout@v2
            - uses: ilammy/msvc-dev-cmd@v1
              with:
                  arch: amd64
            - uses: actions/cache@v2
              with:
                  path: netvr-cpp/Win64
                  key: cpp-win-${{ hashFiles('netvr-cpp/CMakeLists.txt') }}
            - name: Build the .dll
              run: |
                  cd netvr-cpp
                  cmake . -A x64 -B Win64 -DCI=1
                  cmake --build Win64 --config Release
            - name: Upload the .dll
              uses: actions/upload-artifact@v2
              with:
                  name: windows
                  path: netvr-cpp/Win64/Release/isbl_netvr.dll
    build_so:
        runs-on: ubuntu-20.04
        steps:
            - uses: actions/checkout@v2
            - uses: nttld/setup-ndk@v1
              id: setup-ndk
              with:
                  ndk-version: r23b
            - uses: actions/cache@v2
              with:
                  path: netvr-cpp/Android/_deps
                  key: cpp-android-deps-${{ hashFiles('netvr-cpp/CMakeLists.txt') }}
            - name: Build the android .so
              run: |
                  cd netvr-cpp
                  echo $ANDROID_NDK
                  sudo rm /usr/bin/f95 /usr/bin/gfortran
                  cmake . "-DCMAKE_TOOLCHAIN_FILE=$ANDROID_NDK/build/cmake/android.toolchain.cmake" -DCMAKE_SYSTEM_NAME="Android" "-DANDROID_NDK=$ANDROID_NDK" -DANDROID_PLATFORM=android-29 -DANDROID_ABI="arm64-v8a" -B Android
                  cmake --build Android
              env:
                  ANDROID_NDK: ${{ steps.setup-ndk.outputs.ndk-path }}
            - name: Upload the .so
              uses: actions/upload-artifact@v2
              with:
                  name: android
                  path: netvr-cpp/Android/libisbl_netvr.so
    create_zip:
        needs: [build_so, build_dll]
        runs-on: ubuntu-20.04
        steps:
            - uses: actions/checkout@v2
            - uses: actions/download-artifact@v2
              with:
                  name: android
                  path: netvr-unity/Assets/Plugins/Android/arm64-v8a
            - uses: actions/download-artifact@v2
              with:
                  name: windows
                  path: netvr-unity/Assets/Plugins/Windows/x64
            - name: Upload the plugins directory
              uses: actions/upload-artifact@v2
              with:
                  name: Plugins
                  path: netvr-unity/Assets/Plugins
    delete_tmp_artifacts:
        needs:
            - create_zip
            - unity_build_windows
            - unity_build_android2
            - unity_build_android
        runs-on: ubuntu-20.04
        steps:
            - uses: geekyeggo/delete-artifact@v1
              with:
                  name: |
                      windows
                      android
    unity_build_windows:
        needs: [build_dll]
        name: ðŸªŸ Windows Unity build
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v2
              with:
                  lfs: true
            - uses: actions/cache@v2
              with:
                  path: netvr-unity/Library
                  key: Library-Windows-${{ hashFiles('netvr-unity/Assets/**', 'netvr-unity/Packages/**', 'netvr-unity/ProjectSettings/**') }}
                  restore-keys: |
                      Library-Windows-
                      Library-
            - uses: actions/download-artifact@v2
              with:
                  name: windows
                  path: netvr-unity/Assets/Plugins/Windows/x64

            - name: Build project
              uses: game-ci/unity-builder@v2
              env:
                  UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
              with:
                  targetPlatform: StandaloneWindows64
                  projectPath: netvr-unity
                  versioning: Semantic
                  buildName: netvr-windows

            - uses: actions/upload-artifact@v2
              with:
                  name: netvr-windows
                  path: build
    unity_build_android2:
        needs: [build_so]
        name: ðŸ¤– Unity Android build 2
        runs-on: windows-2019
        steps:
            - uses: actions/checkout@v2
              with:
                  lfs: true
            - uses: actions/cache@v2
              with:
                  path: netvr-unity/Library
                  key: Library-Android-2-${{ hashFiles('netvr-unity/Assets/**', 'netvr-unity/Packages/**', 'netvr-unity/ProjectSettings/**') }}
                  restore-keys: |
                      Library-Android-2-
                      Library-Android-
                      Library-
            - uses: actions/download-artifact@v2
              with:
                  name: android
                  path: netvr-unity/Assets/Plugins/Android/arm64-v8a
            - name: Setup Unity
              uses: kuler90/setup-unity@v1
              with:
                  unity-modules: android
                  project-path: netvr-unity
            - name: Build the App
              shell: bash
              run: |
                  echo "$UNITY_LICENSE" | tr -d '\r' > license.ulf
                  $UNITY_PATH -batchmode -nographics -quit -logFile "-" -manualLicenseFile license.ulf
                  rm license.ulf
                  $UNITY_PATH -batchmode -nographics -quit -executeMethod BuildNetVR.BuildAndroid -logFile "-" -projectPath netvr-unity
              env:
                  UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
            - uses: actions/upload-artifact@v2
              with:
                  name: netvr-android2
                  path: netvr-unity-builds/android/netvr.apk
    unity_build_android:
        needs: [build_so]
        name: ðŸ¤– Unity Android build
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v2
              with:
                  lfs: true
            - uses: actions/cache@v2
              with:
                  path: netvr-unity/Library
                  key: Library-Android-${{ hashFiles('netvr-unity/Assets/**', 'netvr-unity/Packages/**', 'netvr-unity/ProjectSettings/**') }}
                  restore-keys: |
                      Library-Android-
                      Library-
            - uses: actions/download-artifact@v2
              with:
                  name: android
                  path: netvr-unity/Assets/Plugins/Android/arm64-v8a

            - name: Build project
              uses: game-ci/unity-builder@v2
              env:
                  UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
              with:
                  targetPlatform: Android
                  projectPath: netvr-unity
                  versioning: Semantic
                  buildMethod: BuildNetVR.BuildAndroid

            - uses: actions/upload-artifact@v2
              with:
                  name: netvr-android
                  path: netvr-unity-builds/android/netvr.apk
